server.port=10332

###############Database Info ##########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database=MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/ddxf_medata?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai

spring.datasource.username=root
spring.datasource.password=

spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=false
spring.datasource.filters=config,stat
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrpt=true;
spring.datasource.logSlowSql=true

###############mybatis ##########################
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml
mybatis.type-aliases-package=com.ontology.entity

###############BlockChain ##########################
service.restfulUrl=http://polaris1.ont.io:20334
service.restfulUrls=http://polaris1.ont.io:20334,http://polaris2.ont.io:20334,http://polaris3.ont.io:20334,http://polaris4.ont.io:20334
#service.restfulUrl=http://172.168.3.81:20334
#service.restfulUrl=http://18.139.107.5:20334
#service.restfulUrl=http://172.168.3.44:20334
#service.restfulUrl=http://192.168.1.196:20334
#service.restfulUrl=http://192.168.3.79:20334

#清空之前同步的块高记录开关
clear.sync.switch=true
#同步之前块高开关
sync.preblock.switch=false

## Elasticsearch
#elasticSearch.host=127.0.0.1
#elasticSearch.port=9200
#elasticSearch.client.connectNum=10
#elasticSearch.client.connectPerRoute=50
#elasticSearch.username=elastic
#elasticSearch.password=HMCXts6MTdPvE8UN

#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=0.0.0.0:9092

#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.acks=1

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer